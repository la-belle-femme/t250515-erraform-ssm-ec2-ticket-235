tags:
  owner: "Webforx Technology"
  team: "Webforx Team"
  environment: "development"
  project: "webforx"
  create_by: "Terraform"
  cloud_provider: "aws"

s3_backend:
  aws_region_main: "us-east-1"
  aws_region_backup: "us-east-2"
  force_destroy: false

vpc:
  cidr_block: 10.0.0.0/16
  enable_dns_support: true
  enable_dns_hostnames: true
  availability_zones: [
    "us-east-1a", 
    "us-east-1b", 
    "us-east-1c"
  ]

  vpc_id: vpc-0cd5e30f5b5cc9770

  public_subnets: 
    us-east-1a: subnet-0c6820f5859c2f10f
    us-east-1b: subnet-0aeea1ee0316459ba
    us-east-1c: subnet-081ea6ed0cc25f00d

  private_subnets: 
    us-east-1a: subnet-05825d1a5df058e41
    us-east-1b: subnet-011bc317d9c1091b0
    us-east-1c: subnet-0c7fc8734c70126dc

ec2:
  bastion-host:
    aws_region: "us-east-1"
    ec2_instance_ami: "ami-04b4f1a9cf54c11d0"
    ec2_instance_type: "t2.micro"
    create_on_public_subnet: true
    root_volume_size: 20
    instance_name: "bastion-host"
    ec2_instance_key_name: "webforx-engineering"
    enable_termination_protection: true
    sg_id: "sg-0e5389fdc65d80d3e"
    vpc_id: "vpc-0cd5e30f5b5cc9770"
    private_subnet: "subnet-05825d1a5df058e41"
    public_subnet: "subnet-0c6820f5859c2f10f"
    tags:
      owner: "Webforx Technology"
      team: "Webforx Team"
      environment: "development"
      project: "webforx"
      create_by: "Terraform"
      cloud_provider: "aws"
      ansible_cleanup: true
      backup: false

eks:
  namespaces: [
      "aws-ebs-csi-driver",
      "aws-efs-csi-driver",
      "cluster-autoscaler",
      "external-dns",
      "metrics-server"
      ]
    
  storage-class:
    control_plane_name: "development-webforx"

  node_group:
    eks_version: 1.31
    node_min: "1"
    desired_node: "1"
    node_max: "5"
    blue_node_color: "blue"
    green_node_color: "green"
    blue: false
    green: true
    ec2_ssh_key: "webforx-engineering"
    deployment_nodegroup: "blue_green"
    capacity_type: "ON_DEMAND"
    ami_type: "AL2_x86_64"
    instance_types: "t2.medium"
    disk_size: 10
    shared_owned: "shared"
    enable_cluster_autoscaler: true
    control_plane_name: "development-webforx"

  control-plane:
    control_plane_name: "development-webforx"
    eks_version: 1.31
    endpoint_private_access: false
    endpoint_public_access: true

s3:
  tools-logging:
    bucket_name: "tools-logging"
  aws-keys:
    bucket_name: "aws-keys"

lambda:
  clean-up-cloudwatch-log-group:
    runtime: "python3.9"
    timeout: 60
    schedule_expression: cron(0 9 ? * MON *)
  ami-clean-up:
    runtime: "python3.9"
    timeout: 60
    schedule_expression: cron(0 9 ? * MON *)
  create-ami-base-on-tag:
    runtime: "python3.9"
    timeout: 60
    schedule_expression: cron(0 9 ? * MON *)

acm:
  domain_name: "webforxtech.net"
  subject_alternate_names: "*.webfortech.net"

aws-secret-manager:
  aws-secret-string: [
    "mysql-db-password",
    "postgres-db-password",
    "postgres-db",
    "mariadb-password"
  ]

parameter-store:
  db_name: 
    dev-connect-mariadb: 
      username: "admin"
      password: "password-value-through-aws-console" 
